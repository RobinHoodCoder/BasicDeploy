"use strict";
"use strict";$(function(){$(".swiper-container").each(function(){if($(this).hasClass("lazy"))new Swiper($(this),{navigation:{noSwiping:!0,noSwipingClass:"swipe-this"},preloadImages:!1,lazy:{loadPrevNextAmount:3,loadOnTransitionStart:!0}});else new Swiper($(this),{})});var n,r,o,a=$(".device").css("position");function e(s,a,l){console.log(s),$(a).each(function(a,e){var t=$(e).attr("data-crop");if("fixed"===s)var i=$(e).attr("data-mobile-crop");else i=t;if($(e).attr("data-retina-crop")&&"relative"===s&&(i=$(e).attr("data-retina-crop")),$(e).attr("data-background")){var n=$(e).attr("data-background");n.indexOf(t);var r=new Image;r.src=n;var o=r.src.replace(t,i);n?$(e).attr("data-background",o):alert("gebruik bg-image ipv background shorthand in je slider of header afbeelding"),"textpage"===l&&$(e).css("background-image",'url("'+o+'")')}})}"fixed"!==a&&($(".sub-portfolio").imagesLoaded().done(function(a){var e=$(a.elements).find(".subGalleryCard"),t=new Array;$(e).each(function(){t.push($(this).height())});var i=Math.max.apply(Math,t);$(e).css("height",i+"px")}),$(".portfolio-items").imagesLoaded({background:!0}).done(function(a){var e=$(a.elements).find(".portfolio-item"),t=new Array;$(e).each(function(){t.push($(this).height())});var i=Math.max.apply(Math,t);$(e).css("height",i+"px")})),e(a,$(".retina"),"textpage"),$(".swiper-container").each(function(){e(a,$(".swiper-img"),"slider")}),0<$(this).scrollTop()&&($(".menu-container").addClass("scrolled"),$(".scrolled-menu-btn").addClass("scrolled")),window.addEventListener("scroll",function(a){0<$(this).scrollTop()?$(".menu-container").addClass("scrolled"):$(".menu-container").removeClass("scrolled")}),$("#hamburger-menu").on("click",function(){$("nav").toggleClass("visible"),$(".menuOverlay").toggleClass("active"),$("body").toggleClass("overlay"),$(".phone-cta.mobile").toggleClass("visible")}),$(".menuOverlay").on("click",function(){$(".menuOverlay").toggleClass("active"),$("nav").toggleClass("visible"),$("body").toggleClass("overlay"),$(".phone-cta.mobile").toggleClass("visible")}),$(".email").each(function(){var a=$(this).html();a=a.replace("[a]","@").replace("[d]","."),$(this).hasClass("mailto")&&(a='<a href="mailto:'+a+'">'+a+"</a>"),$(this).after(a).remove()}),0<$(".masonry-grid").length&&$(".masonry-grid").imagesLoaded().done(function(a){$(a.elements).find(".grid-item");$(".masonry-grid").masonry({itemSelector:".grid-item",masonry:{columnWidth:".grid-item",gutterWidth:10,horizontalOrder:!0}}).masonry("layout")}),$(".lazy").each(function(a,e){$(e).on("appear",function(){var a=$(this).attr("data-src");$(this).attr("src",a),$(this).addClass("load"),$(this).removeClass("lazy")}),$(e).appear(function(){})}),n=jQuery,r=n(".pswp")[0],o=[],n(".picture").each(function(){var i,a=n(this),t=(i=[],a.find("a").each(function(){var a=n(this).attr("href"),e=n(this).data("size").split("x"),t={src:a,w:e[0],h:e[1],title:n(this).data("caption"),tagitems:n(this).data("tags")};i.push(t)}),i);n.each(t,function(a,e){o[a]=new Image,o[a].src=e.src}),a.on("click","figure",function(a){a.preventDefault();var e=n("figure").index(this);new PhotoSwipe(r,PhotoSwipeUI_Default,t,{index:e,bgOpacity:.9,showHideOpacity:!1}).init()})}),$("img").on("contextmenu",function(a){return!1})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
